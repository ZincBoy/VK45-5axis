o<_pm_ts_toolprobe> sub
; Manual Rotating tool length and diameter setting
;   j [b] - 1 = length [default], 2 = diameter only, 3 = length and diameter
;   d     - Reference tool diameter, + for right, - for left
;   k     - experience value for length
;     [e] - tool radius offset number - not used
;   r     - diameter overtravel distance
;     [t] - tool offset number, we will only use the active tool
;   q     - probe z overtravel 4mm default
;   z     - position for diameter measurement - defaults to the z overtravel distance
;   i     - size adjustment 0.01 sets the radius small by 0.01 of the probed value

    #<pval> = #1
	#<automode> = #2
    #<calmode> = #3

    #<tool_left> = 0
    #<tool_orient> = 0
    #<tool_angle> = 0

    #<x> = #<_x>
    #<y> = #<_y>
    
	;queue breaker
	M66 E0 L0
	(print, _pm_ts_toolprobe M66 queue breaker)
	
	o040 if [#<calmode>]
		o050 if [#<_pv_ts_meas_length>]
			#[#<_pma_cal_ts_zvalid>] = 0
		o050 endif
		o051 if [#<_pv_ts_meas_dia>]
			#[#<_pma_cal_ts_dvalid>] = 0
		o051 endif
		o052 if [#<_pv_ts_meas_pos>]
			o053 if [#<calmode>]
				#[#<_pma_cal_ts_lvalid>] = 0
			o053 else
				(abort, Position measurment mode only allowed during tool setter calibration)
			o053 endif
		o052 endif
	o040 else
		o060 if [[#[#<_pma_cal_ts_zvalid>] eq 0] and #<_pv_ts_meas_length>]
			(abort, tool setter length must be calibrated before tool touch off)
		o060 endif
		o065 if [[#[#<_pma_cal_ts_dvalid>] eq 0] and #<_pv_ts_meas_dia>]
			(abort, tool setter diameter must be calibrated before tool touch off)
		o065 endif
	o040 endif

    ; read the tool table to get the left/right and orient requirements for the tool
    o100 if [[#5411 EQ 1] or [#5411 EQ 3]]
        ;left hand tool, force the diameter to negative
        #<_pv_ts_ref_dia> = [-abs[#<_pv_ts_ref_dia>]]
        #<tool_left> = 1
    o100 elseif [#5411 EQ 2]
        #<tool_orient> = 1
    ;    #<tool_angle> = 10
        #<tool_angle> = #5412
    o100 endif
    
    ; cancel tool offsets
    ;G49

	; calc offset value, current work offset and g92/52 offset
	#<workoffset> = [#[5203 + #5220 * 20] + #5213 * #5210]

    o200 if [#<_pv_ts_meas_length>]
    
        o210 if [#<automode>]
            ; this is an auto mode call
            #<ztravel> = [-#<_ini[TOOLSENSOR]MAXPROBE>]
        o210 else
            ; manual mode
			o215 if [#<_pv_got_z>]
				#<ztravel> = #<_pv_z>
			o215 else
				#<ztravel> = #<_pv_ts_probe_overtravel>
			o215 endif
        o210 endif
    
        o<_pm_ts_zprobe> call [#<ztravel>] [#<_pv_ts_ref_dia>] [#<_ini[TOOLSENSOR]XOFF>] [#<_ini[TOOLSENSOR]YOFF>] [#<tool_orient>] [#<tool_angle>]
        (print, _pm_ts_toolprobe z probe completed)
        o<_pm_check_error> call [#<pval>]
        
        #<raw_result> = #[#<_pma_zpos>]
        o220 if [#<_tool_offset>]
            #<ztooloffset> = #5403
        o220 else
            #<ztooloffset> = 0
        o220 endif
        
        #<touch_result> = [#<raw_result> + #<workoffset>]

		(print, raw z: #<raw_result> workoffset: #<workoffset> ztooloffset: #<ztooloffset> touch_result: #<touch_result>)

        o230 if [#<calmode>]
            #<th> = [#<touch_result> + #<ztooloffset> - #5403]
            #[#<_pma_cal_ts_height>] = #<th>
			#[#<_pma_cal_ts_zvalid>] = 1
            (print, Cal tool setter height: #<th>)
            
        o230 else
            #<setterheight> = #[#<_pma_cal_ts_height>]
            o250 if [#<_pv_ts_exp_num>]
                G10.1 P[#<_pv_ts_exp_num>]
                #<experience_value> = #<_read_tool_table_diameter>
            o250 else
                #<experience_value> = 0
            o250 endif

            #<tool_offset> = [#<touch_result> + #<ztooloffset> - #<setterheight> + #<experience_value>]
            (print, setterheight: #<setterheight> tool_offset: #<tool_offset>)
			
            ; apply the offset if we are not using t0
            o255 if [#<_current_tool>]
                G10 L1 P[#<_current_tool>] Z[#<tool_offset>]
				G43
            o255 endif
        o230 endif
    o200 endif
    
    o300 if [#<_pv_ts_meas_dia>]
	
		o305 if [#<_pv_got_z>]
			#<ztravel> = #<_pv_z>
		o305 else
			o290 if [#<_tool_offset>]
    		    #<zdelta> = [[#[#<_pma_cal_ts_height>] - #<workoffset> + #<_pv_ts_z_safe_height>] - #<_z>]
			o290 else
    		    #<zdelta> = [[#[#<_pma_cal_ts_height>] - #<workoffset> + #5403 + #<_pv_ts_z_safe_height>] - #<_z>]
			o290 endif
			(print, zdelta: #<zdelta>)
			G91 G1 Z[#<zdelta>] F[#<_pmm_rapid_feedrate>]
		    #<ztravel> = [#<_ini[TOOLSENSOR]D_Z_DEPTH> + #<_pv_ts_z_safe_height>]
		    (print, ztravel: #<ztravel>)
		o305 endif

		#<xdir> = #<_ini[TOOLSENSOR]XDIR>
		#<ydir> = #<_ini[TOOLSENSOR]YDIR>

		;o310 if [#<tool_orient>]
		;	(abort, Tool orientation not allowed in diameter measurement mode)
		;o310 endif
		o320 if [#<xdir> and #<ydir>]
			(abort, Only one tool diameter measurement axis allowed)
		o320 endif

		
		o330 if [#<_pv_ts_meas_pos>]
			o<_pm_ts_dprobe> call [#<pval>] [#<ztravel>] [#<_pv_ts_ref_dia>] [#<xdir>] [#<ydir>] [#<_pv_ts_bidir>] [1]
			(print, _pm_ts_toolprobe diameter probe completed)
			o<_pm_check_error> call [#<pval>]
			
			#<xc> = #[#<_pma_xpos>]
			#<yc> = #[#<_pma_ypos>]
			#<xerr> = [#<xc> - #<_ini[TOOLSENSOR]X>]
			#<yerr> = [#<yc> - #<_ini[TOOLSENSOR]Y>]
			
			#<tpe> = [[#<xerr> ** 2 + #<yerr> ** 2] ** 0.5]

			o340 if [#<tpe> gt #<_pv_ts_max_pos_error>]
				(abort, Tool setter location error greater than allowed in INI file, Xerr: #<xerr>, Yerr: #<yerr>)
			o340 endif
			
			#[#<_pma_cal_ts_xerror>] = [#<xerr>]
			#[#<_pma_cal_ts_yerror>] = [#<yerr>]
			#[#<_pma_cal_ts_lvalid>] = 1
			
			(debug, Tool sensor located at X: #<xc> Y: #<yc>, Xerr: #<xerr>, Yerr: #<yerr>)
			
			; go to the calibrated center of the probe
			G90 G1 X[#<xc>] Y[#<yc>] F[#<_ini[PROBE_MACRO]RAPID_VELOCITY>]
		o330 endif
		
		
		o<_pm_ts_dprobe> call [#<pval>] [#<ztravel>] [#<_pv_ts_ref_dia>] [#<xdir>] [#<ydir>] [#<_pv_ts_bidir>] [0]
		o<_pm_check_error> call [#<pval>]

		#<size> = #[#<_pma_size>]
		
		o350 if [#<calmode>]
			#[#<_pma_cal_ts_diameter>] = [#<size> - #5410]
			#[#<_pma_cal_ts_dvalid>] = 1
		o350 else
			#<tool_radius> = [[#<size> - #[#<_pma_cal_ts_diameter>]] / 2 - #<_pv_ts_radius_adjust>]
			(print, tool radius #<tool_radius>)
			G10 L1 P[#<_current_tool>] R[#<tool_radius>]
		o350 endif
		
        
    o300 endif

	; stop the spindle
	M5

    ; apply new tool offset
    G43


o<_pm_ts_toolprobe> endsub [0]
M2
